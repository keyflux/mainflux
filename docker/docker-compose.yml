# Copyright (c) Mainflux
# SPDX-License-Identifier: Apache-2.0

version: "3.7"

networks:
  mainflux-base-net:
    driver: bridge

volumes:
  mainflux-users-db-volume:
  mainflux-things-db-volume:
  mainflux-things-redis-volume:
  mainflux-es-redis-volume:
  mainflux-mqtt-broker-volume:

services:
  ui:
    image: mainflux/ui:${MF_RELEASE_TAG}
    container_name: mainflux-ui
    restart: on-failure
    ports:
      - ${MF_UI_PORT}:${MF_UI_PORT}
    networks:
      - mainflux-base-net
    environment:
      MF_UI_PORT: ${MF_UI_PORT}
      MF_UI_MQTT_WS_URL: ${MF_UI_MQTT_WS_URL}
      MF_PROXY_AUTH: ${MF_PROXY_AUTH}
      MF_PROXY_LOGOUT_URL: ${MF_PROXY_LOGOUT_URL}
      MF_UI_APP_PREFIX: ${MF_UI_APP_PREFIX}
    command: /entrypoint.sh
  nginx:
    image: nginx:1.23.3-alpine
    container_name: mainflux-nginx
    restart: on-failure
    volumes:
      - ./nginx/nginx-${AUTH-key}.conf:/etc/nginx/nginx.conf.template
      - ./nginx/entrypoint.sh:/docker-entrypoint.d/entrypoint.sh
      - ./nginx/snippets:/etc/nginx/snippets
      - ./ssl/authorization.js:/etc/nginx/authorization.js
      - ./ssl/certs/mainflux-server.crt:/etc/ssl/certs/mainflux-server.crt
      - ./ssl/certs/ca.crt:/etc/ssl/certs/ca.crt
      - ./ssl/certs/mainflux-server.key:/etc/ssl/private/mainflux-server.key
      - ./ssl/dhparam.pem:/etc/ssl/certs/dhparam.pem
    ports:
      - ${MF_NGINX_HTTP_PORT}:${MF_NGINX_HTTP_PORT}
      - ${MF_NGINX_SSL_PORT}:${MF_NGINX_SSL_PORT}
      - ${MF_NGINX_MQTT_PORT}:${MF_NGINX_MQTT_PORT}
      - ${MF_NGINX_MQTTS_PORT}:${MF_NGINX_MQTTS_PORT}
    networks:
      - mainflux-base-net
    env_file:
      - .env
    depends_on:
      - things
      - users
      - mqtt-adapter
      - http-adapter
      - ws-adapter

  broker:
    extends:
      file: brokers/nats.yml
      service: broker
    container_name: mainflux-broker
    restart: on-failure
    networks:
      - mainflux-base-net
    ports:
    - 4222:4222

  things-db:
    image: postgres:13.3-alpine
    container_name: mainflux-things-db
    restart: on-failure
    environment:
      POSTGRES_USER: ${MF_THINGS_DB_USER}
      POSTGRES_PASSWORD: ${MF_THINGS_DB_PASS}
      POSTGRES_DB: ${MF_THINGS_DB}
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-things-db-volume:/var/lib/postgresql/data

  things:
    image: mainflux/things:${MF_RELEASE_TAG}
    container_name: mainflux-things
    depends_on:
      - things-db
      - users
    restart: on-failure
    environment:
      MF_THINGS_LOG_LEVEL: ${MF_THINGS_LOG_LEVEL}
      MF_THINGS_DB_HOST: ${MF_THINGS_DB_HOST}
      MF_THINGS_DB_PORT: ${MF_THINGS_DB_PORT}
      MF_THINGS_DB_USER: ${MF_THINGS_DB_USER}
      MF_THINGS_DB_PASS: ${MF_THINGS_DB_PASS}
      MF_THINGS_DB: ${MF_THINGS_DB}
      MF_THINGS_CACHE_URL: ${MF_THINGS_CACHE_URL}
      MF_THINGS_CACHE_PASS: ${MF_THINGS_CACHE_PASS}
      MF_THINGS_CACHE_DB: ${MF_THINGS_CACHE_DB}
      MF_THINGS_ES_URL: ${MF_THINGS_ES_URL}
      MF_THINGS_ES_PASS: ${MF_THINGS_ES_PASS}
      MF_THINGS_ES_DB: ${MF_THINGS_ES_DB}
      MF_THINGS_HTTP_PORT: ${MF_THINGS_HTTP_PORT}
      MF_JAEGER_URL: ${MF_JAEGER_URL}
      MF_THINGS_AUTH_HTTP_PORT: ${MF_THINGS_AUTH_HTTP_PORT}
      MF_THINGS_AUTH_GRPC_PORT: ${MF_THINGS_AUTH_GRPC_PORT}
      MF_AUTH_GRPC_URL: ${MF_USERS_GRPC_URL}
      MF_AUTH_GRPC_TIMEOUT: ${MF_USERS_GRPC_TIMEOUT}
      MF_THINGS_STANDALONE_ID: ${MF_THINGS_STANDALONE_ID}
      MF_THINGS_STANDALONE_TOKEN: ${MF_THINGS_STANDALONE_TOKEN}
      MF_THINGS_CACHE_KEY_DURATION: ${MF_THINGS_CACHE_KEY_DURATION}
      MF_SEND_TELEMETRY: ${MF_SEND_TELEMETRY}
    ports:
      - ${MF_THINGS_HTTP_PORT}:${MF_THINGS_HTTP_PORT}
      - ${MF_THINGS_AUTH_HTTP_PORT}:${MF_THINGS_AUTH_HTTP_PORT}
      - ${MF_THINGS_AUTH_GRPC_PORT}:${MF_THINGS_AUTH_GRPC_PORT}
    networks:
      - mainflux-base-net

  users-db:
    image: postgres:15.1-alpine
    container_name: mainflux-users-db
    restart: on-failure
    environment:
      POSTGRES_USER: ${MF_USERS_DB_USER}
      POSTGRES_PASSWORD: ${MF_USERS_DB_PASS}
      POSTGRES_DB: ${MF_USERS_DB}
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-users-db-volume:/var/lib/postgresql/data

  things-redis:
    image: redis:6.2.2-alpine
    container_name: mainflux-things-redis
    restart: on-failure
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-things-redis-volume:/data

  users:
    image: mainflux/users:${MF_RELEASE_TAG}
    container_name: mainflux-users
    depends_on:
      - users-db
    restart: on-failure
    environment:
      MF_USERS_LOG_LEVEL: ${MF_USERS_LOG_LEVEL}
      MF_USERS_DB_HOST: ${MF_USERS_DB_HOST}
      MF_USERS_DB_PORT: ${MF_USERS_DB_PORT}
      MF_USERS_DB_USER: ${MF_USERS_DB_USER}
      MF_USERS_DB_PASS: ${MF_USERS_DB_PASS}
      MF_USERS_DB: ${MF_USERS_DB}
      MF_USERS_DB_SSL_MODE: ${MF_USERS_DB_SSL_MODE}
      MF_USERS_DB_SSL_CERT: ${MF_USERS_DB_SSL_CERT}
      MF_USERS_DB_SSL_KEY: ${MF_USERS_DB_SSL_KEY}
      MF_USERS_DB_SSL_ROOT_CERT: ${MF_USERS_DB_SSL_ROOT_CERT}
      MF_USERS_HTTP_PORT: ${MF_USERS_HTTP_PORT}
      MF_USERS_GRPC_PORT: ${MF_USERS_GRPC_PORT}
      MF_USERS_GRPC_URL: ${MF_USERS_GRPC_URL}
      MF_USERS_GRPC_TIMEOUT: ${MF_USERS_GRPC_TIMEOUT}
      MF_USERS_SERVER_CERT: ${MF_USERS_SERVER_CERT}
      MF_USERS_SERVER_KEY: ${MF_USERS_SERVER_KEY}
      MF_USERS_SECRET_KEY: ${MF_USERS_SECRET_KEY}
      MF_USERS_ADMIN_EMAIL: ${MF_USERS_ADMIN_EMAIL}
      MF_USERS_ADMIN_PASSWORD: ${MF_USERS_ADMIN_PASSWORD}
      MF_USERS_PASS_REGEX: ${MF_USERS_PASS_REGEX}
      MF_USERS_ACCESS_TOKEN_DURATION: ${MF_USERS_ACCESS_TOKEN_DURATION}
      MF_USERS_REFRESH_TOKEN_DURATION: ${MF_USERS_REFRESH_TOKEN_DURATION}
      MF_TOKEN_RESET_ENDPOINT: ${MF_TOKEN_RESET_ENDPOINT}
      MF_JAEGER_URL: ${MF_JAEGER_URL}
      MF_EMAIL_HOST: ${MF_EMAIL_HOST}
      MF_EMAIL_PORT: ${MF_EMAIL_PORT}
      MF_EMAIL_USERNAME: ${MF_EMAIL_USERNAME}
      MF_EMAIL_PASSWORD: ${MF_EMAIL_PASSWORD}
      MF_EMAIL_FROM_ADDRESS: ${MF_EMAIL_FROM_ADDRESS}
      MF_EMAIL_FROM_NAME: ${MF_EMAIL_FROM_NAME}
      MF_EMAIL_TEMPLATE: ${MF_EMAIL_TEMPLATE}
      MF_SEND_TELEMETRY: ${MF_SEND_TELEMETRY}
    ports:
      - ${MF_USERS_HTTP_PORT}:${MF_USERS_HTTP_PORT}
      - ${MF_USERS_GRPC_PORT}:${MF_USERS_GRPC_PORT}
    networks:
      - mainflux-base-net
    volumes:
      - ./templates/${MF_USERS_RESET_PWD_TEMPLATE}:/email.tmpl     
  
  jaeger:
    image: jaegertracing/all-in-one:1.38.0
    container_name: mainflux-jaeger
    ports:
      - ${MF_JAEGER_PORT}:${MF_JAEGER_PORT}/udp
      - ${MF_JAEGER_FRONTEND}:${MF_JAEGER_FRONTEND}
      - ${MF_JAEGER_COLLECTOR}:${MF_JAEGER_COLLECTOR}
      - ${MF_JAEGER_CONFIGS}:${MF_JAEGER_CONFIGS}
    networks:
      - mainflux-base-net

  vernemq:
    image: mainflux/vernemq:${MF_RELEASE_TAG}
    container_name: mainflux-vernemq
    restart: on-failure
    environment:
      DOCKER_VERNEMQ_ALLOW_ANONYMOUS: ${MF_DOCKER_VERNEMQ_ALLOW_ANONYMOUS}
      DOCKER_VERNEMQ_LOG__CONSOLE__LEVEL: ${MF_DOCKER_VERNEMQ_LOG__CONSOLE__LEVEL}
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-mqtt-broker-volume:/var/lib/vernemq

  mqtt-adapter:
    image: mainflux/mqtt:${MF_RELEASE_TAG}
    container_name: mainflux-mqtt
    depends_on:
      - vernemq
      - things
      - broker
    restart: on-failure
    environment:
      MF_MQTT_ADAPTER_LOG_LEVEL: ${MF_MQTT_ADAPTER_LOG_LEVEL}
      MF_MQTT_ADAPTER_MQTT_PORT: ${MF_MQTT_ADAPTER_MQTT_PORT}
      MF_MQTT_ADAPTER_WS_PORT: ${MF_MQTT_ADAPTER_WS_PORT}
      MF_MQTT_ADAPTER_ES_URL: es-redis:${MF_REDIS_TCP_PORT}
      MF_BROKER_URL: ${MF_BROKER_URL}
      MF_MQTT_ADAPTER_MQTT_TARGET_HOST: vernemq
      MF_MQTT_ADAPTER_MQTT_TARGET_PORT: ${MF_MQTT_BROKER_PORT}
      MF_MQTT_ADAPTER_MQTT_TARGET_HEALTH_CHECK: http://vernemq:8888/health
      MF_MQTT_ADAPTER_WS_TARGET_HOST: vernemq
      MF_MQTT_ADAPTER_WS_TARGET_PORT: ${MF_MQTT_BROKER_WS_PORT}
      MF_JAEGER_URL: ${MF_JAEGER_URL}
      MF_THINGS_AUTH_GRPC_URL: ${MF_THINGS_AUTH_GRPC_URL}
      MF_THINGS_AUTH_GRPC_TIMEOUT: ${MF_THINGS_AUTH_GRPC_TIMEOUT}
      MF_AUTH_CACHE_URL: things-redis:${MF_REDIS_TCP_PORT}
      MF_SEND_TELEMETRY: ${MF_SEND_TELEMETRY}
    networks:
      - mainflux-base-net

  http-adapter:
    image: mainflux/http:${MF_RELEASE_TAG}
    container_name: mainflux-http
    depends_on:
      - things
      - broker
    restart: on-failure
    environment:
      MF_HTTP_ADAPTER_LOG_LEVEL: debug
      MF_HTTP_ADAPTER_PORT: ${MF_HTTP_ADAPTER_PORT}
      MF_BROKER_URL: ${MF_BROKER_URL}
      MF_JAEGER_URL: ${MF_JAEGER_URL}
      MF_THINGS_AUTH_GRPC_URL: ${MF_THINGS_AUTH_GRPC_URL}
      MF_THINGS_AUTH_GRPC_TIMEOUT: ${MF_THINGS_AUTH_GRPC_TIMEOUT}
      MF_SEND_TELEMETRY: ${MF_SEND_TELEMETRY}
    ports:
      - ${MF_HTTP_ADAPTER_PORT}:${MF_HTTP_ADAPTER_PORT}
    networks:
      - mainflux-base-net

  es-redis:
    image: redis:6.2.2-alpine
    container_name: mainflux-es-redis
    restart: on-failure
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-es-redis-volume:/data

  coap-adapter:
    image: mainflux/coap:${MF_RELEASE_TAG}
    container_name: mainflux-coap
    depends_on:
      - things
      - broker
    restart: on-failure
    environment:
      MF_COAP_ADAPTER_LOG_LEVEL: ${MF_COAP_ADAPTER_LOG_LEVEL}
      MF_COAP_ADAPTER_PORT: ${MF_COAP_ADAPTER_PORT}
      MF_BROKER_URL: ${MF_BROKER_URL}
      MF_JAEGER_URL: ${MF_JAEGER_URL}
      MF_THINGS_AUTH_GRPC_URL: ${MF_THINGS_AUTH_GRPC_URL}
      MF_THINGS_AUTH_GRPC_TIMEOUT: ${MF_THINGS_AUTH_GRPC_TIMEOUT}
      MF_SEND_TELEMETRY: ${MF_SEND_TELEMETRY}
    ports:
      - ${MF_COAP_ADAPTER_PORT}:${MF_COAP_ADAPTER_PORT}/udp
      - ${MF_COAP_ADAPTER_PORT}:${MF_COAP_ADAPTER_PORT}/tcp
    networks:
      - mainflux-base-net

  ws-adapter:
    image: mainflux/ws:${MF_RELEASE_TAG}
    container_name: mainflux-ws
    depends_on:
      - things
      - broker
    restart: on-failure
    environment:
      MF_WS_ADAPTER_LOG_LEVEL: ${MF_WS_ADAPTER_LOG_LEVEL}
      MF_WS_ADAPTER_PORT: ${MF_WS_ADAPTER_PORT}
      MF_BROKER_URL: ${MF_BROKER_URL}
      MF_JAEGER_URL: ${MF_JAEGER_URL}
      MF_THINGS_AUTH_GRPC_URL: ${MF_THINGS_AUTH_GRPC_URL}
      MF_THINGS_AUTH_GRPC_TIMEOUT: ${MF_THINGS_AUTH_GRPC_TIMEOUT}
      MF_SEND_TELEMETRY: ${MF_SEND_TELEMETRY}
    ports:
      - ${MF_WS_ADAPTER_PORT}:${MF_WS_ADAPTER_PORT}
    networks:
      - mainflux-base-net
